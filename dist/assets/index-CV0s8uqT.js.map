{"version":3,"file":"index-CV0s8uqT.js","sources":["../../src/views/manage/role/modules/menu-auth-modal.vue","../../src/views/manage/role/modules/button-auth-modal.vue","../../src/views/manage/role/modules/role-operate-drawer.vue","../../src/views/manage/role/modules/role-search.vue","../../src/views/manage/role/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, shallowRef, watch } from 'vue';\nimport type { SelectProps } from 'ant-design-vue';\nimport type { DataNode } from 'ant-design-vue/es/tree';\nimport { $t } from '@/locales';\nimport { fetchGetAllPages, fetchGetMenuTree } from '@/service/api';\n\ndefineOptions({\n  name: 'MenuAuthModal'\n});\n\ninterface Props {\n  /** the roleId */\n  roleId: number;\n}\n\nconst props = defineProps<Props>();\n\nconst visible = defineModel<boolean>('visible', {\n  default: false\n});\n\nfunction closeModal() {\n  visible.value = false;\n}\n\nconst title = computed(() => $t('common.edit') + $t('page.manage.role.menuAuth'));\n\nconst home = shallowRef('');\n\nasync function getHome() {\n  console.log(props.roleId);\n\n  home.value = 'home';\n}\n\nasync function updateHome(val: SelectProps['value']) {\n  // request\n\n  home.value = val as string;\n}\n\nconst pages = shallowRef<string[]>([]);\n\nasync function getPages() {\n  const { error, data } = await fetchGetAllPages();\n\n  if (!error) {\n    pages.value = data;\n  }\n}\n\nconst pageSelectOptions = computed(() => {\n  const opts: CommonType.Option[] = pages.value.map(page => ({\n    label: page,\n    value: page\n  }));\n\n  return opts;\n});\n\nconst tree = shallowRef<DataNode[]>([]);\n\nasync function getTree() {\n  const { error, data } = await fetchGetMenuTree();\n\n  if (!error) {\n    tree.value = recursiveTransform(data);\n  }\n}\n\nfunction recursiveTransform(data: Api.SystemManage.MenuTree[]): DataNode[] {\n  return data.map(item => {\n    const { id: key, label } = item;\n\n    if (item.children) {\n      return {\n        key,\n        title: label,\n        children: recursiveTransform(item.children)\n      };\n    }\n\n    return {\n      key,\n      title: label\n    };\n  });\n}\n\nconst checks = shallowRef<number[]>([]);\n\nasync function getChecks() {\n  console.log(props.roleId);\n  // request\n  checks.value = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21];\n}\n\nfunction handleSubmit() {\n  console.log(checks.value, props.roleId);\n  // request\n\n  window.$message?.success?.($t('common.modifySuccess'));\n\n  closeModal();\n}\n\nasync function init() {\n  getHome();\n  getPages();\n  await getTree();\n  await getChecks();\n}\n\nwatch(visible, val => {\n  if (val) {\n    init();\n  }\n});\n</script>\n\n<template>\n  <AModal v-model:open=\"visible\" :title=\"title\" class=\"w-480px\">\n    <div class=\"flex-y-center gap-16px pb-12px\">\n      <div>{{ $t('page.manage.menu.home') }}</div>\n      <ASelect :value=\"home\" :options=\"pageSelectOptions\" class=\"w-240px\" @update:value=\"updateHome\" />\n    </div>\n    <ATree v-model:checked-keys=\"checks\" :tree-data=\"tree\" checkable :height=\"280\" class=\"h-280px\" />\n    <template #footer>\n      <AButton size=\"small\" class=\"mt-16px\" @click=\"closeModal\">\n        {{ $t('common.cancel') }}\n      </AButton>\n      <AButton type=\"primary\" size=\"small\" class=\"mt-16px\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n    </template>\n  </AModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed, shallowRef } from 'vue';\nimport type { DataNode } from 'ant-design-vue/es/tree';\nimport { $t } from '@/locales';\n\ndefineOptions({\n  name: 'ButtonAuthModal'\n});\n\ninterface Props {\n  /** the roleId */\n  roleId: number;\n}\n\nconst props = defineProps<Props>();\n\nconst visible = defineModel<boolean>('visible', {\n  default: false\n});\n\nfunction closeModal() {\n  visible.value = false;\n}\n\nconst title = computed(() => $t('common.edit') + $t('page.manage.role.buttonAuth'));\n\nconst tree = shallowRef<DataNode[]>([]);\n\nasync function getAllButtons() {\n  // request\n  tree.value = [\n    { key: 1, title: 'button1', code: 'code1' },\n    { key: 2, title: 'button2', code: 'code2' },\n    { key: 3, title: 'button3', code: 'code3' },\n    { key: 4, title: 'button4', code: 'code4' },\n    { key: 5, title: 'button5', code: 'code5' },\n    { key: 6, title: 'button6', code: 'code6' },\n    { key: 7, title: 'button7', code: 'code7' },\n    { key: 8, title: 'button8', code: 'code8' },\n    { key: 9, title: 'button9', code: 'code9' },\n    { key: 10, title: 'button10', code: 'code10' }\n  ];\n}\n\nconst checks = shallowRef<number[]>([]);\n\nasync function getChecks() {\n  console.log(props.roleId);\n  // request\n  checks.value = [1, 2, 3, 4, 5];\n}\n\nfunction handleSubmit() {\n  console.log(checks.value, props.roleId);\n  // request\n\n  window.$message?.success?.($t('common.modifySuccess'));\n\n  closeModal();\n}\n\nfunction init() {\n  getAllButtons();\n  getChecks();\n}\n\n// init\ninit();\n</script>\n\n<template>\n  <AModal v-model:open=\"visible\" :title=\"title\" class=\"w-480px\">\n    <ATree v-model:checked-keys=\"checks\" :tree-data=\"tree\" checkable :height=\"280\" class=\"h-280px\" />\n    <template #footer>\n      <AButton size=\"small\" class=\"mt-16px\" @click=\"closeModal\">\n        {{ $t('common.cancel') }}\n      </AButton>\n      <AButton type=\"primary\" size=\"small\" class=\"mt-16px\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n    </template>\n  </AModal>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed, ref, watch } from 'vue';\nimport { useBoolean } from '@sa/hooks';\nimport { useAntdForm, useFormRules } from '@/hooks/common/form';\nimport { $t } from '@/locales';\nimport { enableStatusOptions } from '@/constants/business';\nimport MenuAuthModal from './menu-auth-modal.vue';\nimport ButtonAuthModal from './button-auth-modal.vue';\n\ndefineOptions({\n  name: 'RoleOperateDrawer'\n});\n\ninterface Props {\n  /** the type of operation */\n  operateType: AntDesign.TableOperateType;\n  /** the edit row data */\n  rowData?: Api.SystemManage.Role | null;\n}\n\nconst props = defineProps<Props>();\n\ninterface Emits {\n  (e: 'submitted'): void;\n}\n\nconst emit = defineEmits<Emits>();\n\nconst visible = defineModel<boolean>('visible', {\n  default: false\n});\n\nconst { formRef, validate, resetFields } = useAntdForm();\nconst { defaultRequiredRule } = useFormRules();\nconst { bool: menuAuthVisible, setTrue: openMenuAuthModal } = useBoolean();\nconst { bool: buttonAuthVisible, setTrue: openButtonAuthModal } = useBoolean();\n\nconst title = computed(() => {\n  const titles: Record<AntDesign.TableOperateType, string> = {\n    add: $t('page.manage.role.addRole'),\n    edit: $t('page.manage.role.editRole')\n  };\n  return titles[props.operateType];\n});\n\ntype Model = Pick<Api.SystemManage.Role, 'roleName' | 'roleCode' | 'roleDesc' | 'status'>;\n\nconst model = ref(createDefaultModel());\n\nfunction createDefaultModel(): Model {\n  return {\n    roleName: '',\n    roleCode: '',\n    roleDesc: '',\n    status: '1'\n  };\n}\n\ntype RuleKey = Exclude<keyof Model, 'roleDesc'>;\n\nconst rules: Record<RuleKey, App.Global.FormRule> = {\n  roleName: defaultRequiredRule,\n  roleCode: defaultRequiredRule,\n  status: defaultRequiredRule\n};\n\nconst roleId = computed(() => props.rowData?.id || -1);\n\nconst isEdit = computed(() => props.operateType === 'edit');\n\nfunction handleInitModel() {\n  model.value = createDefaultModel();\n\n  if (props.operateType === 'edit' && props.rowData) {\n    Object.assign(model.value, props.rowData);\n  }\n}\n\nfunction closeDrawer() {\n  visible.value = false;\n}\n\nasync function handleSubmit() {\n  await validate();\n  // request\n  window.$message?.success($t('common.updateSuccess'));\n  closeDrawer();\n  emit('submitted');\n}\n\nwatch(visible, () => {\n  if (visible.value) {\n    handleInitModel();\n    resetFields();\n  }\n});\n</script>\n\n<template>\n  <ADrawer v-model:open=\"visible\" :title=\"title\" :width=\"360\">\n    <AForm ref=\"formRef\" layout=\"vertical\" :model=\"model\" :rules=\"rules\">\n      <AFormItem :label=\"$t('page.manage.role.roleName')\" name=\"roleName\">\n        <AInput v-model:value=\"model.roleName\" :placeholder=\"$t('page.manage.role.form.roleName')\" />\n      </AFormItem>\n      <AFormItem :label=\"$t('page.manage.role.roleCode')\" name=\"roleCode\">\n        <AInput v-model:value=\"model.roleCode\" :placeholder=\"$t('page.manage.role.form.roleCode')\" />\n      </AFormItem>\n      <AFormItem :label=\"$t('page.manage.role.roleStatus')\" name=\"status\">\n        <ARadioGroup v-model:value=\"model.status\">\n          <ARadio v-for=\"item in enableStatusOptions\" :key=\"item.value\" :value=\"item.value\">\n            {{ $t(item.label) }}\n          </ARadio>\n        </ARadioGroup>\n      </AFormItem>\n      <AFormItem :label=\"$t('page.manage.role.roleDesc')\" name=\"roleDesc\">\n        <AInput v-model:value=\"model.roleDesc\" :placeholder=\"$t('page.manage.role.form.roleDesc')\" />\n      </AFormItem>\n    </AForm>\n    <ASpace v-if=\"isEdit\">\n      <AButton @click=\"openMenuAuthModal\">{{ $t('page.manage.role.menuAuth') }}</AButton>\n      <MenuAuthModal v-model:visible=\"menuAuthVisible\" :role-id=\"roleId\" />\n      <AButton @click=\"openButtonAuthModal\">{{ $t('page.manage.role.buttonAuth') }}</AButton>\n      <ButtonAuthModal v-model:visible=\"buttonAuthVisible\" :role-id=\"roleId\" />\n    </ASpace>\n    <template #footer>\n      <div class=\"flex-y-center justify-end gap-12px\">\n        <AButton @click=\"closeDrawer\">{{ $t('common.cancel') }}</AButton>\n        <AButton type=\"primary\" @click=\"handleSubmit\">{{ $t('common.confirm') }}</AButton>\n      </div>\n    </template>\n  </ADrawer>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { $t } from '@/locales';\nimport { enableStatusOptions } from '@/constants/business';\n\ndefineOptions({\n  name: 'RoleSearch'\n});\n\ninterface Emits {\n  (e: 'reset'): void;\n  (e: 'search'): void;\n}\n\nconst emit = defineEmits<Emits>();\n\nconst model = defineModel<Api.SystemManage.RoleSearchParams>('model', { required: true });\n\nfunction reset() {\n  emit('reset');\n}\n\nfunction search() {\n  emit('search');\n}\n</script>\n\n<template>\n  <ACard :title=\"$t('common.search')\" :bordered=\"false\" class=\"card-wrapper\">\n    <AForm :model=\"model\" :label-width=\"80\">\n      <ARow :gutter=\"[16, 16]\" wrap>\n        <ACol :span=\"24\" :md=\"12\" :lg=\"6\">\n          <AFormItem :label=\"$t('page.manage.role.roleName')\" name=\"roleName\" class=\"m-0\">\n            <AInput v-model:value=\"model.roleName\" :placeholder=\"$t('page.manage.role.form.roleName')\" />\n          </AFormItem>\n        </ACol>\n        <ACol :span=\"24\" :md=\"12\" :lg=\"6\">\n          <AFormItem :label=\"$t('page.manage.role.roleCode')\" name=\"roleCode\" class=\"m-0\">\n            <AInput v-model:value=\"model.roleCode\" :placeholder=\"$t('page.manage.role.form.roleCode')\" />\n          </AFormItem>\n        </ACol>\n        <ACol :span=\"24\" :md=\"12\" :lg=\"6\">\n          <AFormItem :label=\"$t('page.manage.role.roleStatus')\" name=\"status\" class=\"m-0\">\n            <ASelect v-model:value=\"model.status\" :placeholder=\"$t('page.manage.role.form.roleStatus')\" allow-clear>\n              <ASelectOption v-for=\"option in enableStatusOptions\" :key=\"option.value\" :value=\"option.value\">\n                {{ $t(option.label) }}\n              </ASelectOption>\n            </ASelect>\n          </AFormItem>\n        </ACol>\n        <ACol :span=\"24\" :md=\"12\" :lg=\"6\">\n          <AFormItem class=\"m-0\">\n            <div class=\"w-full flex-y-center justify-end gap-12px\">\n              <AButton @click=\"reset\">\n                <template #icon>\n                  <icon-ic-round-refresh class=\"align-sub text-icon\" />\n                </template>\n                <span class=\"ml-8px\">{{ $t('common.reset') }}</span>\n              </AButton>\n              <AButton type=\"primary\" ghost @click=\"search\">\n                <template #icon>\n                  <icon-ic-round-search class=\"align-sub text-icon\" />\n                </template>\n                <span class=\"ml-8px\">{{ $t('common.search') }}</span>\n              </AButton>\n            </div>\n          </AFormItem>\n        </ACol>\n      </ARow>\n    </AForm>\n  </ACard>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"tsx\">\ndefineOptions({\n  name: \"manage_role\"\n});\n\nimport { Button, Popconfirm, Tag } from 'ant-design-vue';\nimport { fetchGetRoleList } from '@/service/api';\nimport { useTable, useTableOperate, useTableScroll } from '@/hooks/common/table';\nimport { $t } from '@/locales';\nimport { enableStatusRecord } from '@/constants/business';\nimport RoleOperateDrawer from './modules/role-operate-drawer.vue';\nimport RoleSearch from './modules/role-search.vue';\n\nconst { tableWrapperRef, scrollConfig } = useTableScroll();\n\nconst {\n  columns,\n  columnChecks,\n  data,\n  loading,\n  getData,\n  getDataByPage,\n  mobilePagination,\n  searchParams,\n  resetSearchParams\n} = useTable({\n  apiFn: fetchGetRoleList,\n  apiParams: {\n    current: 1,\n    size: 10,\n    status: undefined,\n    roleName: undefined,\n    roleCode: undefined\n  },\n  columns: () => [\n    {\n      key: 'index',\n      dataIndex: 'index',\n      title: $t('common.index'),\n      width: 64,\n      align: 'center'\n    },\n    {\n      key: 'roleName',\n      dataIndex: 'roleName',\n      title: $t('page.manage.role.roleName'),\n      align: 'center',\n      minWidth: 120\n    },\n    {\n      key: 'roleCode',\n      dataIndex: 'roleCode',\n      title: $t('page.manage.role.roleCode'),\n      align: 'center',\n      minWidth: 120\n    },\n    {\n      key: 'roleDesc',\n      dataIndex: 'roleDesc',\n      title: $t('page.manage.role.roleDesc'),\n      minWidth: 120\n    },\n    {\n      key: 'status',\n      dataIndex: 'status',\n      title: $t('page.manage.role.roleStatus'),\n      align: 'center',\n      width: 100,\n      customRender: ({ record }) => {\n        if (record.status === null) {\n          return null;\n        }\n\n        const tagMap: Record<Api.Common.EnableStatus, string> = {\n          1: 'success',\n          2: 'warning'\n        };\n\n        const label = $t(enableStatusRecord[record.status]);\n\n        return <Tag color={tagMap[record.status]}>{label}</Tag>;\n      }\n    },\n    {\n      key: 'operate',\n      title: $t('common.operate'),\n      align: 'center',\n      width: 130,\n      customRender: ({ record }) => (\n        <div class=\"flex-center gap-8px\">\n          <Button type=\"primary\" ghost size=\"small\" onClick={() => edit(record.id)}>\n            {$t('common.edit')}\n          </Button>\n          <Popconfirm onConfirm={() => handleDelete(record.id)} title={$t('common.confirmDelete')}>\n            <Button danger size=\"small\">\n              {$t('common.delete')}\n            </Button>\n          </Popconfirm>\n        </div>\n      )\n    }\n  ]\n});\n\nconst {\n  drawerVisible,\n  operateType,\n  editingData,\n  handleAdd,\n  handleEdit,\n  checkedRowKeys,\n  rowSelection,\n  onBatchDeleted,\n  onDeleted\n  // closeDrawer\n} = useTableOperate(data, getData);\n\nasync function handleBatchDelete() {\n  // request\n\n  onBatchDeleted();\n}\n\nfunction handleDelete(id: number) {\n  // request\n  console.log(id);\n\n  onDeleted();\n}\n\nfunction edit(id: number) {\n  handleEdit(id);\n}\n</script>\n\n<template>\n  <div class=\"min-h-500px flex-col-stretch gap-16px overflow-hidden lt-sm:overflow-auto\">\n    <RoleSearch v-model:model=\"searchParams\" @reset=\"resetSearchParams\" @search=\"getDataByPage\" />\n    <ACard\n      :title=\"$t('page.manage.role.title')\"\n      :bordered=\"false\"\n      :body-style=\"{ flex: 1, overflow: 'hidden' }\"\n      class=\"flex-col-stretch sm:flex-1-hidden card-wrapper\"\n    >\n      <template #extra>\n        <TableHeaderOperation\n          v-model:columns=\"columnChecks\"\n          :disabled-delete=\"checkedRowKeys.length === 0\"\n          :loading=\"loading\"\n          @add=\"handleAdd\"\n          @delete=\"handleBatchDelete\"\n          @refresh=\"getData\"\n        />\n      </template>\n      <ATable\n        ref=\"tableWrapperRef\"\n        :columns=\"columns\"\n        :data-source=\"data\"\n        :row-selection=\"rowSelection\"\n        :loading=\"loading\"\n        row-key=\"id\"\n        size=\"small\"\n        :pagination=\"mobilePagination\"\n        :scroll=\"scrollConfig\"\n        class=\"h-full\"\n      />\n      <RoleOperateDrawer\n        v-model:visible=\"drawerVisible\"\n        :operate-type=\"operateType\"\n        :row-data=\"editingData\"\n        @submitted=\"getDataByPage\"\n      />\n    </ACard>\n  </div>\n</template>\n\n<style scoped></style>\n"],"names":["props","__props","visible","_useModel","closeModal","title","computed","$t","home","shallowRef","getHome","updateHome","val","pages","getPages","error","data","fetchGetAllPages","pageSelectOptions","page","tree","getTree","fetchGetMenuTree","recursiveTransform","item","key","label","checks","getChecks","handleSubmit","_b","_a","init","watch","getAllButtons","emit","__emit","formRef","validate","resetFields","useAntdForm","defaultRequiredRule","useFormRules","menuAuthVisible","openMenuAuthModal","useBoolean","buttonAuthVisible","openButtonAuthModal","model","ref","createDefaultModel","rules","roleId","isEdit","handleInitModel","closeDrawer","reset","search","_isSlot","s","Object","prototype","toString","call","_isVNode","tableWrapperRef","scrollConfig","useTableScroll","columns","columnChecks","loading","getData","getDataByPage","mobilePagination","searchParams","resetSearchParams","useTable","apiFn","fetchGetRoleList","apiParams","current","size","status","undefined","roleName","roleCode","dataIndex","width","align","minWidth","customRender","record","tagMap","enableStatusRecord","_createVNode2","Tag","default","_slot","_slot2","Button","onClick","edit","id","Popconfirm","onConfirm","handleDelete","drawerVisible","operateType","editingData","handleAdd","handleEdit","checkedRowKeys","rowSelection","onBatchDeleted","onDeleted","useTableOperate","handleBatchDelete","console","log"],"mappings":"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"}