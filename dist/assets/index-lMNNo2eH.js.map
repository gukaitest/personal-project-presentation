{"version":3,"file":"index-lMNNo2eH.js","sources":["../../packages/hooks/src/use-count-down.ts","../../src/components/custom/wave-bg.vue","../../src/views/_builtin/login/modules/pwd-login.vue","../../src/hooks/business/captcha.ts","../../src/views/_builtin/login/modules/code-login.vue","../../src/views/_builtin/login/modules/register.vue","../../src/views/_builtin/login/modules/reset-pwd.vue","../../src/views/_builtin/login/index.vue"],"sourcesContent":["import { computed, onScopeDispose, ref } from 'vue';\nimport { useRafFn } from '@vueuse/core';\n\n/**\n * count down\n *\n * @param seconds - count down seconds\n */\nexport default function useCountDown(seconds: number) {\n  const FPS_PER_SECOND = 60;\n\n  const fps = ref(0);\n\n  const count = computed(() => Math.ceil(fps.value / FPS_PER_SECOND));\n\n  const isCounting = computed(() => fps.value > 0);\n\n  const { pause, resume } = useRafFn(\n    () => {\n      if (fps.value > 0) {\n        fps.value -= 1;\n      } else {\n        pause();\n      }\n    },\n    { immediate: false }\n  );\n\n  function start(updateSeconds: number = seconds) {\n    fps.value = FPS_PER_SECOND * updateSeconds;\n    resume();\n  }\n\n  function stop() {\n    fps.value = 0;\n    pause();\n  }\n\n  onScopeDispose(() => {\n    pause();\n  });\n\n  return {\n    count,\n    isCounting,\n    start,\n    stop\n  };\n}\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue';\nimport { getColorPalette } from '@sa/utils';\n\ninterface Props {\n  /** Theme color */\n  themeColor: string;\n}\n\nconst props = defineProps<Props>();\n\nconst lightColor = computed(() => getColorPalette(props.themeColor, 3));\nconst darkColor = computed(() => getColorPalette(props.themeColor, 6));\n</script>\n\n<template>\n  <div class=\"absolute-lt z-1 size-full overflow-hidden\">\n    <div class=\"absolute -right-300px -top-900px lt-sm:-right-100px lt-sm:-top-1170px\">\n      <svg height=\"1337\" width=\"1337\">\n        <defs>\n          <path\n            id=\"path-1\"\n            opacity=\"1\"\n            fill-rule=\"evenodd\"\n            d=\"M1337,668.5 C1337,1037.455193874239 1037.455193874239,1337 668.5,1337 C523.6725684305388,1337 337,1236 370.50000000000006,1094 C434.03835568300906,824.6732385973953 6.906089672974592e-14,892.6277623047779 0,668.5000000000001 C0,299.5448061257611 299.5448061257609,1.1368683772161603e-13 668.4999999999999,0 C1037.455193874239,0 1337,299.544806125761 1337,668.5Z\"\n          />\n          <linearGradient id=\"linearGradient-2\" x1=\"0.79\" y1=\"0.62\" x2=\"0.21\" y2=\"0.86\">\n            <stop offset=\"0\" :stop-color=\"lightColor\" stop-opacity=\"1\" />\n            <stop offset=\"1\" :stop-color=\"darkColor\" stop-opacity=\"1\" />\n          </linearGradient>\n        </defs>\n        <g opacity=\"1\">\n          <use xlink:href=\"#path-1\" fill=\"url(#linearGradient-2)\" fill-opacity=\"1\" />\n        </g>\n      </svg>\n    </div>\n    <div class=\"absolute -bottom-400px -left-200px lt-sm:-bottom-760px lt-sm:-left-100px\">\n      <svg height=\"896\" width=\"967.8852157128662\">\n        <defs>\n          <path\n            id=\"path-2\"\n            opacity=\"1\"\n            fill-rule=\"evenodd\"\n            d=\"M896,448 C1142.6325445712241,465.5747656464056 695.2579309733121,896 448,896 C200.74206902668806,896 5.684341886080802e-14,695.2579309733121 0,448.0000000000001 C0,200.74206902668806 200.74206902668791,5.684341886080802e-14 447.99999999999994,0 C695.2579309733121,0 475,418 896,448Z\"\n          />\n          <linearGradient id=\"linearGradient-3\" x1=\"0.5\" y1=\"0\" x2=\"0.5\" y2=\"1\">\n            <stop offset=\"0\" :stop-color=\"darkColor\" stop-opacity=\"1\" />\n            <stop offset=\"1\" :stop-color=\"lightColor\" stop-opacity=\"1\" />\n          </linearGradient>\n        </defs>\n        <g opacity=\"1\">\n          <use xlink:href=\"#path-2\" fill=\"url(#linearGradient-3)\" fill-opacity=\"1\" />\n        </g>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue';\nimport { $t } from '@/locales';\nimport { loginModuleRecord } from '@/constants/app';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useAntdForm, useFormRules } from '@/hooks/common/form';\nimport { useAuthStore } from '@/store/modules/auth';\n\ndefineOptions({\n  name: 'PwdLogin'\n});\n\nconst authStore = useAuthStore();\nconst { toggleLoginModule } = useRouterPush();\nconst { formRef, validate } = useAntdForm();\n\ninterface FormModel {\n  userName: string;\n  password: string;\n}\n\nconst model: FormModel = reactive({\n  userName: 'Soybean',\n  password: '123456'\n});\n\nconst rules = computed<Record<keyof FormModel, App.Global.FormRule[]>>(() => {\n  // inside computed to make locale reactive, if not apply i18n, you can define it without computed\n  const { formRules } = useFormRules();\n\n  return {\n    userName: formRules.userName,\n    password: formRules.pwd\n  };\n});\n\nasync function handleSubmit() {\n  await validate();\n  await authStore.login(model.userName, model.password);\n}\n</script>\n\n<template>\n  <AForm ref=\"formRef\" :model=\"model\" :rules=\"rules\" @keyup.enter=\"handleSubmit\">\n    <AFormItem name=\"userName\">\n      <AInput v-model:value=\"model.userName\" size=\"large\" :placeholder=\"$t('page.login.common.userNamePlaceholder')\" />\n    </AFormItem>\n    <AFormItem name=\"password\">\n      <AInputPassword\n        v-model:value=\"model.password\"\n        size=\"large\"\n        :placeholder=\"$t('page.login.common.passwordPlaceholder')\"\n      />\n    </AFormItem>\n    <ASpace direction=\"vertical\" size=\"large\" class=\"w-full\">\n      <div class=\"flex-y-center justify-between\">\n        <ACheckbox>{{ $t('page.login.pwdLogin.rememberMe') }}</ACheckbox>\n        <AButton type=\"text\" @click=\"toggleLoginModule('reset-pwd')\">\n          {{ $t('page.login.pwdLogin.forgetPassword') }}\n        </AButton>\n      </div>\n      <AButton type=\"primary\" block size=\"large\" shape=\"round\" :loading=\"authStore.loginLoading\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n      <div class=\"flex-y-center justify-between\">\n        <AButton class=\"h-34px flex-1\" block @click=\"toggleLoginModule('code-login')\">\n          {{ $t(loginModuleRecord['code-login']) }}\n        </AButton>\n        <div class=\"w-12px\"></div>\n        <AButton class=\"h-34px flex-1\" block @click=\"toggleLoginModule('register')\">\n          {{ $t(loginModuleRecord.register) }}\n        </AButton>\n      </div>\n    </ASpace>\n  </AForm>\n</template>\n\n<style scoped></style>\n","import { computed } from 'vue';\nimport { useCountDown, useLoading } from '@sa/hooks';\nimport { $t } from '@/locales';\nimport { REG_PHONE } from '@/constants/reg';\n\nexport function useCaptcha() {\n  const { loading, startLoading, endLoading } = useLoading();\n  const { count, start, stop, isCounting } = useCountDown(10);\n\n  const label = computed(() => {\n    let text = $t('page.login.codeLogin.getCode');\n\n    const countingLabel = $t('page.login.codeLogin.reGetCode', { time: count.value });\n\n    if (loading.value) {\n      text = '';\n    }\n\n    if (isCounting.value) {\n      text = countingLabel;\n    }\n\n    return text;\n  });\n\n  function isPhoneValid(phone: string) {\n    if (phone.trim() === '') {\n      window.$message?.error?.($t('form.phone.required'));\n\n      return false;\n    }\n\n    if (!REG_PHONE.test(phone)) {\n      window.$message?.error?.($t('form.phone.invalid'));\n\n      return false;\n    }\n\n    return true;\n  }\n\n  async function getCaptcha(phone: string) {\n    const valid = isPhoneValid(phone);\n\n    if (!valid || loading.value) {\n      return;\n    }\n\n    startLoading();\n\n    // request\n    await new Promise(resolve => {\n      setTimeout(resolve, 500);\n    });\n\n    window.$message?.success?.($t('page.login.codeLogin.sendCodeSuccess'));\n\n    start();\n\n    endLoading();\n  }\n\n  return {\n    label,\n    start,\n    stop,\n    isCounting,\n    loading,\n    getCaptcha\n  };\n}\n","<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue';\nimport { $t } from '@/locales';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useAntdForm, useFormRules } from '@/hooks/common/form';\nimport { useCaptcha } from '@/hooks/business/captcha';\n\ndefineOptions({\n  name: 'CodeLogin'\n});\n\nconst { toggleLoginModule } = useRouterPush();\nconst { formRef, validate } = useAntdForm();\nconst { label, isCounting, loading, getCaptcha } = useCaptcha();\n\ninterface FormModel {\n  phone: string;\n  code: string;\n}\n\nconst model: FormModel = reactive({\n  phone: '',\n  code: ''\n});\n\nconst rules = computed<Record<keyof FormModel, App.Global.FormRule[]>>(() => {\n  const { formRules } = useFormRules();\n\n  return {\n    phone: formRules.phone,\n    code: formRules.code\n  };\n});\n\nasync function handleSubmit() {\n  await validate();\n  // request\n  window.$message?.success($t('page.login.common.validateSuccess'));\n}\n</script>\n\n<template>\n  <AForm ref=\"formRef\" :model=\"model\" :rules=\"rules\" @keyup.enter=\"handleSubmit\">\n    <AFormItem name=\"phone\">\n      <AInput v-model:value=\"model.phone\" size=\"large\" :placeholder=\"$t('page.login.common.phonePlaceholder')\" />\n    </AFormItem>\n    <AFormItem name=\"code\">\n      <div class=\"w-full flex-y-center gap-16px\">\n        <AInput v-model:value=\"model.code\" size=\"large\" :placeholder=\"$t('page.login.common.codePlaceholder')\" />\n        <AButton size=\"large\" :disabled=\"isCounting\" :loading=\"loading\" @click=\"getCaptcha(model.phone)\">\n          {{ label }}\n        </AButton>\n      </div>\n    </AFormItem>\n    <ASpace direction=\"vertical\" size=\"large\" class=\"w-full\">\n      <AButton type=\"primary\" block size=\"large\" shape=\"round\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n      <AButton block size=\"large\" shape=\"round\" @click=\"toggleLoginModule('pwd-login')\">\n        {{ $t('page.login.common.back') }}\n      </AButton>\n    </ASpace>\n  </AForm>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue';\nimport { $t } from '@/locales';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useAntdForm, useFormRules } from '@/hooks/common/form';\nimport { useCaptcha } from '@/hooks/business/captcha';\n\ndefineOptions({\n  name: 'Register'\n});\n\nconst { toggleLoginModule } = useRouterPush();\nconst { formRef, validate } = useAntdForm();\nconst { label, isCounting, loading, getCaptcha } = useCaptcha();\n\ninterface FormModel {\n  phone: string;\n  code: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst model: FormModel = reactive({\n  phone: '',\n  code: '',\n  password: '',\n  confirmPassword: ''\n});\n\nconst rules = computed<Record<keyof FormModel, App.Global.FormRule[]>>(() => {\n  const { formRules, createConfirmPwdRule } = useFormRules();\n\n  return {\n    phone: formRules.phone,\n    code: formRules.code,\n    password: formRules.pwd,\n    confirmPassword: createConfirmPwdRule(model.password)\n  };\n});\n\nasync function handleSubmit() {\n  await validate();\n  // request to register\n  window.$message?.success($t('page.login.common.validateSuccess'));\n}\n</script>\n\n<template>\n  <AForm ref=\"formRef\" :model=\"model\" :rules=\"rules\" @keyup.enter=\"handleSubmit\">\n    <AFormItem name=\"phone\">\n      <AInput v-model:value=\"model.phone\" size=\"large\" :placeholder=\"$t('page.login.common.phonePlaceholder')\" />\n    </AFormItem>\n    <AFormItem name=\"code\">\n      <div class=\"w-full flex-y-center gap-16px\">\n        <AInput v-model:value=\"model.code\" size=\"large\" :placeholder=\"$t('page.login.common.codePlaceholder')\" />\n        <AButton size=\"large\" :disabled=\"isCounting\" :loading=\"loading\" @click=\"getCaptcha(model.phone)\">\n          {{ label }}\n        </AButton>\n      </div>\n    </AFormItem>\n    <AFormItem name=\"password\">\n      <AInputPassword\n        v-model:value=\"model.password\"\n        size=\"large\"\n        :placeholder=\"$t('page.login.common.passwordPlaceholder')\"\n      />\n    </AFormItem>\n    <AFormItem name=\"confirmPassword\">\n      <AInputPassword\n        v-model:value=\"model.confirmPassword\"\n        size=\"large\"\n        :placeholder=\"$t('page.login.common.confirmPasswordPlaceholder')\"\n      />\n    </AFormItem>\n    <ASpace direction=\"vertical\" size=\"large\" class=\"w-full\">\n      <AButton type=\"primary\" block size=\"large\" shape=\"round\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n      <AButton block size=\"large\" shape=\"round\" @click=\"toggleLoginModule('pwd-login')\">\n        {{ $t('page.login.common.back') }}\n      </AButton>\n    </ASpace>\n  </AForm>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed, reactive } from 'vue';\nimport { $t } from '@/locales';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useAntdForm, useFormRules } from '@/hooks/common/form';\n\ndefineOptions({\n  name: 'ResetPwd'\n});\n\nconst { toggleLoginModule } = useRouterPush();\nconst { formRef, validate } = useAntdForm();\n\ninterface FormModel {\n  phone: string;\n  code: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst model: FormModel = reactive({\n  phone: '',\n  code: '',\n  password: '',\n  confirmPassword: ''\n});\n\ntype RuleRecord = Partial<Record<keyof FormModel, App.Global.FormRule[]>>;\n\nconst rules = computed<RuleRecord>(() => {\n  const { formRules, createConfirmPwdRule } = useFormRules();\n\n  return {\n    phone: formRules.phone,\n    password: formRules.pwd,\n    confirmPassword: createConfirmPwdRule(model.password)\n  };\n});\n\nasync function handleSubmit() {\n  await validate();\n  // request to reset password\n  window.$message?.success($t('page.login.common.validateSuccess'));\n}\n</script>\n\n<template>\n  <AForm ref=\"formRef\" :model=\"model\" :rules=\"rules\" @keyup.enter=\"handleSubmit\">\n    <AFormItem name=\"phone\">\n      <AInput v-model:value=\"model.phone\" size=\"large\" :placeholder=\"$t('page.login.common.phonePlaceholder')\" />\n    </AFormItem>\n    <AFormItem name=\"code\">\n      <AInput v-model:value=\"model.code\" size=\"large\" :placeholder=\"$t('page.login.common.codePlaceholder')\" />\n    </AFormItem>\n    <AFormItem name=\"password\">\n      <AInputPassword\n        v-model:value=\"model.password\"\n        size=\"large\"\n        :placeholder=\"$t('page.login.common.passwordPlaceholder')\"\n      />\n    </AFormItem>\n    <AFormItem name=\"confirmPassword\">\n      <AInputPassword\n        v-model:value=\"model.confirmPassword\"\n        size=\"large\"\n        :placeholder=\"$t('page.login.common.confirmPasswordPlaceholder')\"\n      />\n    </AFormItem>\n    <ASpace direction=\"vertical\" size=\"large\" class=\"w-full\">\n      <AButton type=\"primary\" block size=\"large\" shape=\"round\" @click=\"handleSubmit\">\n        {{ $t('common.confirm') }}\n      </AButton>\n      <AButton block size=\"large\" shape=\"round\" @click=\"toggleLoginModule('pwd-login')\">\n        {{ $t('page.login.common.back') }}\n      </AButton>\n    </ASpace>\n  </AForm>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\ndefineOptions({\n  name: \"login\"\n});\n\nimport { computed } from 'vue';\nimport type { Component } from 'vue';\nimport { getColorPalette, mixColor } from '@sa/utils';\nimport { $t } from '@/locales';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { loginModuleRecord } from '@/constants/app';\nimport PwdLogin from './modules/pwd-login.vue';\nimport CodeLogin from './modules/code-login.vue';\nimport Register from './modules/register.vue';\nimport ResetPwd from './modules/reset-pwd.vue';\nimport BindWechat from './modules/bind-wechat.vue';\n\ninterface Props {\n  /** The login module */\n  module?: UnionKey.LoginModule;\n}\n\nconst props = defineProps<Props>();\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\n\ninterface LoginModule {\n  label: string;\n  component: Component;\n}\n\nconst moduleMap: Record<UnionKey.LoginModule, LoginModule> = {\n  'pwd-login': { label: loginModuleRecord['pwd-login'], component: PwdLogin },\n  'code-login': { label: loginModuleRecord['code-login'], component: CodeLogin },\n  register: { label: loginModuleRecord.register, component: Register },\n  'reset-pwd': { label: loginModuleRecord['reset-pwd'], component: ResetPwd },\n  'bind-wechat': { label: loginModuleRecord['bind-wechat'], component: BindWechat }\n};\n\nconst activeModule = computed(() => moduleMap[props.module || 'pwd-login']);\n\nconst bgThemeColor = computed(() =>\n  themeStore.darkMode ? getColorPalette(themeStore.themeColor, 7) : themeStore.themeColor\n);\n\nconst bgColor = computed(() => {\n  const COLOR_WHITE = '#ffffff';\n\n  const ratio = themeStore.darkMode ? 0.5 : 0.2;\n\n  return mixColor(COLOR_WHITE, themeStore.themeColor, ratio);\n});\n</script>\n\n<template>\n  <div class=\"relative size-full flex-center\" :style=\"{ backgroundColor: bgColor }\">\n    <WaveBg :theme-color=\"bgThemeColor\" />\n    <ACard class=\"relative z-4\">\n      <div class=\"w-400px lt-sm:w-300px\">\n        <header class=\"flex-y-center justify-between\">\n          <SystemLogo class=\"text-64px text-primary lt-sm:text-48px\" />\n          <h3 class=\"text-28px text-primary font-500 lt-sm:text-22px\">{{ $t('system.title') }}</h3>\n          <div class=\"i-flex-col\">\n            <ThemeSchemaSwitch\n              :theme-schema=\"themeStore.themeScheme\"\n              :show-tooltip=\"false\"\n              class=\"text-20px lt-sm:text-18px\"\n              @switch=\"themeStore.toggleThemeScheme\"\n            />\n            <LangSwitch\n              :lang=\"appStore.locale\"\n              :lang-options=\"appStore.localeOptions\"\n              :show-tooltip=\"false\"\n              @change-lang=\"appStore.changeLocale\"\n            />\n          </div>\n        </header>\n        <main class=\"pt-24px\">\n          <h3 class=\"text-18px text-primary font-medium\">{{ $t(activeModule.label) }}</h3>\n          <div class=\"animation-slide-in-left pt-24px\">\n            <Transition :name=\"themeStore.page.animateMode\" mode=\"out-in\" appear>\n              <component :is=\"activeModule.component\" />\n            </Transition>\n          </div>\n        </main>\n      </div>\n    </ACard>\n  </div>\n</template>\n\n<style scoped></style>\n"],"names":["useCountDown","seconds","fps","ref","count","computed","isCounting","pause","resume","useRafFn","start","updateSeconds","stop","onScopeDispose","props","__props","lightColor","getColorPalette","darkColor","authStore","useAuthStore","toggleLoginModule","useRouterPush","formRef","validate","useAntdForm","model","reactive","rules","formRules","useFormRules","handleSubmit","useCaptcha","loading","startLoading","endLoading","useLoading","label","text","$t","countingLabel","isPhoneValid","phone","_b","_a","REG_PHONE","_d","_c","getCaptcha","resolve","createConfirmPwdRule","appStore","useAppStore","themeStore","useThemeStore","moduleMap","loginModuleRecord","PwdLogin","CodeLogin","Register","ResetPwd","BindWechat","activeModule","bgThemeColor","bgColor","COLOR_WHITE","ratio","mixColor"],"mappings":"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"}