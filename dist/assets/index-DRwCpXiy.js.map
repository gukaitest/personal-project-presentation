{"version":3,"file":"index-DRwCpXiy.js","sources":["../../src/layouts/modules/global-menu/modules/vertical-menu.vue","../../src/components/common/pin-toggler.vue","../../src/layouts/modules/global-menu/components/first-level-menu.vue","../../src/layouts/modules/global-menu/modules/vertical-mix-menu.vue","../../src/layouts/modules/global-menu/modules/horizontal-menu.vue","../../src/layouts/modules/global-menu/modules/horizontal-mix-menu.vue","../../src/layouts/modules/global-menu/modules/reversed-horizontal-mix-menu.vue","../../src/layouts/modules/global-menu/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { MenuInfo } from 'ant-design-vue/es/menu/src/interface';\nimport type { RouteKey } from '@elegant-router/types';\nimport { SimpleScrollbar } from '@sa/materials';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { useRouteStore } from '@/store/modules/route';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { GLOBAL_SIDER_MENU_ID } from '@/constants/app';\nimport { useMenu } from '../../../context';\n\ndefineOptions({\n  name: 'VerticalMenu'\n});\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\nconst routeStore = useRouteStore();\nconst { routerPushByKeyWithMetaQuery } = useRouterPush();\nconst { selectedKey } = useMenu();\n\nconst darkTheme = computed(() => !themeStore.darkMode && themeStore.sider.inverted);\n\nconst menuTheme = computed(() => (darkTheme.value ? 'dark' : 'light'));\n\nconst openKeys = computed(() => {\n  if (appStore.siderCollapse || !selectedKey.value) return [];\n\n  if (!selectedKey.value) return [];\n\n  return routeStore.getSelectedMenuKeyPath(selectedKey.value);\n});\n\nfunction handleClickMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  routerPushByKeyWithMetaQuery(key);\n}\n</script>\n\n<template>\n  <!-- 通过id选择器传递菜单 -->\n  <Teleport :to=\"`#${GLOBAL_SIDER_MENU_ID}`\">\n    <SimpleScrollbar class=\"menu-wrapper\" :class=\"{ 'select-menu': !darkTheme }\">\n      <AMenu\n        mode=\"inline\"\n        :theme=\"menuTheme\"\n        :items=\"routeStore.menus\"\n        :selected-keys=\"[selectedKey]\"\n        :open-keys=\"openKeys\"\n        :inline-collapsed=\"appStore.siderCollapse\"\n        :inline-indent=\"18\"\n        class=\"size-full transition-300 border-0!\"\n        :class=\"{ 'bg-container!': !darkTheme }\"\n        @click=\"handleClickMenu\"\n      />\n    </SimpleScrollbar>\n  </Teleport>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\nimport { computed } from 'vue';\nimport { $t } from '@/locales';\n\ndefineOptions({ name: 'PinToggler' });\n\ninterface Props {\n  pin?: boolean;\n}\n\nconst props = defineProps<Props>();\n\nconst icon = computed(() => (props.pin ? 'mdi-pin-off' : 'mdi-pin'));\n</script>\n\n<template>\n  <ButtonIcon :tooltip-content=\"pin ? $t('icon.unpin') : $t('icon.pin')\" tooltip-placement=\"bottomLeft\" trigger-parent>\n    <SvgIcon :icon=\"icon\" />\n  </ButtonIcon>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { createReusableTemplate } from '@vueuse/core';\nimport { SimpleScrollbar } from '@sa/materials';\nimport { transformColorWithOpacity } from '@sa/color';\n\ndefineOptions({\n  name: 'FirstLevelMenu'\n});\n\ninterface Props {\n  menus: App.Global.Menu[];\n  activeMenuKey?: string;\n  inverted?: boolean;\n  siderCollapse?: boolean;\n  darkMode?: boolean;\n  themeColor: string;\n}\n\nconst props = defineProps<Props>();\n\ninterface Emits {\n  (e: 'select', menu: App.Global.Menu): boolean;\n  (e: 'toggleSiderCollapse'): void;\n}\n\nconst emit = defineEmits<Emits>();\n\ninterface MixMenuItemProps {\n  /** Menu item label */\n  label: App.Global.Menu['label'];\n  /** Menu item icon */\n  icon: App.Global.Menu['icon'];\n  /** Active menu item */\n  active: boolean;\n  /** Mini size */\n  isMini?: boolean;\n}\nconst [DefineMixMenuItem, MixMenuItem] = createReusableTemplate<MixMenuItemProps>();\n\nconst selectedBgColor = computed(() => {\n  const { darkMode, themeColor } = props;\n\n  const light = transformColorWithOpacity(themeColor, 0.1, '#ffffff');\n  const dark = transformColorWithOpacity(themeColor, 0.3, '#000000');\n\n  return darkMode ? dark : light;\n});\n\nfunction handleClickMixMenu(menu: App.Global.Menu) {\n  emit('select', menu);\n}\n\nfunction toggleSiderCollapse() {\n  emit('toggleSiderCollapse');\n}\n</script>\n\n<template>\n  <!-- define component: MixMenuItem -->\n  <DefineMixMenuItem v-slot=\"{ label, icon, active, isMini }\">\n    <div\n      class=\"mx-4px mb-6px flex-col-center cursor-pointer rounded-8px bg-transparent px-4px py-8px transition-300 hover:bg-[rgb(0,0,0,0.08)]\"\n      :class=\"{\n        'text-primary selected-mix-menu': active,\n        'text-white:65 hover:text-white': inverted,\n        '!text-white !bg-primary': active && inverted\n      }\"\n    >\n      <component :is=\"icon\" :class=\"[isMini ? 'text-icon-small' : 'text-icon-large']\" />\n      <p\n        class=\"w-full ellipsis-text text-center text-12px transition-height-300\"\n        :class=\"[isMini ? 'h-0 pt-0' : 'h-20px pt-4px']\"\n      >\n        {{ label }}\n      </p>\n    </div>\n  </DefineMixMenuItem>\n  <!-- define component end: MixMenuItem -->\n\n  <div class=\"h-full flex-col-stretch flex-1-hidden\">\n    <slot></slot>\n    <SimpleScrollbar>\n      <MixMenuItem\n        v-for=\"menu in menus\"\n        :key=\"menu.key\"\n        :label=\"menu.label\"\n        :icon=\"menu.icon\"\n        :active=\"menu.key === activeMenuKey\"\n        :is-mini=\"siderCollapse\"\n        @click=\"handleClickMixMenu(menu)\"\n      />\n    </SimpleScrollbar>\n    <MenuToggler\n      arrow-icon\n      :collapsed=\"siderCollapse\"\n      :z-index=\"99\"\n      :class=\"{ 'text-white:88 !hover:text-white': inverted }\"\n      @click=\"toggleSiderCollapse\"\n    />\n  </div>\n</template>\n\n<style scoped>\n.selected-mix-menu {\n  background-color: v-bind(selectedBgColor);\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { MenuInfo } from 'ant-design-vue/es/menu/src/interface';\nimport type { RouteKey } from '@elegant-router/types';\nimport { SimpleScrollbar } from '@sa/materials';\nimport { useBoolean } from '@sa/hooks';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { useRouteStore } from '@/store/modules/route';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { $t } from '@/locales';\nimport { GLOBAL_SIDER_MENU_ID } from '@/constants/app';\nimport { useMenu, useMixMenuContext } from '../../../context';\nimport FirstLevelMenu from '../components/first-level-menu.vue';\nimport GlobalLogo from '../../global-logo/index.vue';\n\ndefineOptions({\n  name: 'VerticalMixMenu'\n});\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\nconst routeStore = useRouteStore();\nconst { routerPushByKeyWithMetaQuery } = useRouterPush();\nconst { bool: drawerVisible, setBool: setDrawerVisible } = useBoolean();\nconst {\n  allMenus,\n  childLevelMenus,\n  activeFirstLevelMenuKey,\n  setActiveFirstLevelMenuKey,\n  getActiveFirstLevelMenuKey\n  //\n} = useMixMenuContext();\nconst { selectedKey } = useMenu();\n\nconst inverted = computed(() => !themeStore.darkMode && themeStore.sider.inverted);\n\nconst menuTheme = computed(() => (inverted.value ? 'dark' : 'light'));\n\nconst hasChildMenus = computed(() => childLevelMenus.value.length > 0);\n\nconst showDrawer = computed(() => hasChildMenus.value && (drawerVisible.value || appStore.mixSiderFixed));\n\nfunction handleSelectMixMenu(menu: App.Global.Menu) {\n  setActiveFirstLevelMenuKey(menu.key);\n\n  if (menu.children?.length) {\n    setDrawerVisible(true);\n  } else {\n    routerPushByKeyWithMetaQuery(menu.routeKey);\n  }\n}\n\nfunction handleResetActiveMenu() {\n  setDrawerVisible(false);\n\n  if (!appStore.mixSiderFixed) {\n    getActiveFirstLevelMenuKey();\n  }\n}\n\nconst openKeys = computed(() => {\n  if (appStore.siderCollapse || !selectedKey.value) return [];\n\n  if (!selectedKey.value) return [];\n\n  return routeStore.getSelectedMenuKeyPath(selectedKey.value);\n});\n\nfunction handleClickMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  routerPushByKeyWithMetaQuery(key);\n}\n</script>\n\n<template>\n  <Teleport :to=\"`#${GLOBAL_SIDER_MENU_ID}`\">\n    <div class=\"h-full flex\" @mouseleave=\"handleResetActiveMenu\">\n      <FirstLevelMenu\n        :menus=\"allMenus\"\n        :active-menu-key=\"activeFirstLevelMenuKey\"\n        :inverted=\"inverted\"\n        :sider-collapse=\"appStore.siderCollapse\"\n        :dark-mode=\"themeStore.darkMode\"\n        :theme-color=\"themeStore.themeColor\"\n        @select=\"handleSelectMixMenu\"\n        @toggle-sider-collapse=\"appStore.toggleSiderCollapse\"\n      >\n        <GlobalLogo :show-title=\"false\" :style=\"{ height: themeStore.header.height + 'px' }\" />\n      </FirstLevelMenu>\n      <div\n        class=\"relative h-full transition-width-300\"\n        :style=\"{ width: appStore.mixSiderFixed && hasChildMenus ? themeStore.sider.mixChildMenuWidth + 'px' : '0px' }\"\n      >\n        <DarkModeContainer\n          class=\"absolute-lt h-full flex-col-stretch nowrap-hidden shadow-sm transition-all-300\"\n          :inverted=\"inverted\"\n          :style=\"{ width: showDrawer ? themeStore.sider.mixChildMenuWidth + 'px' : '0px' }\"\n        >\n          <header class=\"flex-y-center justify-between px-12px\" :style=\"{ height: themeStore.header.height + 'px' }\">\n            <h2 class=\"text-16px text-primary font-bold\">{{ $t('system.title') }}</h2>\n            <PinToggler\n              :pin=\"appStore.mixSiderFixed\"\n              :class=\"{ 'text-white:88 !hover:text-white': inverted }\"\n              @click=\"appStore.toggleMixSiderFixed\"\n            />\n          </header>\n          <SimpleScrollbar class=\"menu-wrapper\" :class=\"{ 'select-menu': !inverted }\">\n            <AMenu\n              mode=\"inline\"\n              :theme=\"menuTheme\"\n              :items=\"childLevelMenus\"\n              :selected-keys=\"[selectedKey]\"\n              :open-keys=\"openKeys\"\n              class=\"size-full transition-300 border-0!\"\n              :class=\"{ 'bg-container!': !inverted }\"\n              @click=\"handleClickMenu\"\n            />\n          </SimpleScrollbar>\n        </DarkModeContainer>\n      </div>\n    </div>\n  </Teleport>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script setup lang=\"ts\">\nimport type { MenuInfo } from 'ant-design-vue/es/menu/src/interface';\nimport type { RouteKey } from '@elegant-router/types';\nimport { GLOBAL_HEADER_MENU_ID } from '@/constants/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { useRouteStore } from '@/store/modules/route';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useMenu } from '../../../context';\n\ndefineOptions({\n  name: 'HorizontalMenu'\n});\n\nconst themeStore = useThemeStore();\nconst routeStore = useRouteStore();\nconst { routerPushByKeyWithMetaQuery } = useRouterPush();\nconst { selectedKey } = useMenu();\n\nfunction handleClickMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  routerPushByKeyWithMetaQuery(key);\n}\n</script>\n\n<template>\n  <Teleport :to=\"`#${GLOBAL_HEADER_MENU_ID}`\">\n    <AMenu\n      mode=\"horizontal\"\n      :selected-keys=\"[selectedKey]\"\n      :items=\"routeStore.menus\"\n      class=\"horizontal-menu size-full transition-300 border-0!\"\n      :class=\"{ 'bg-container!': themeStore.darkMode }\"\n      :style=\"{ lineHeight: themeStore.header.height + 'px' }\"\n      @click=\"handleClickMenu\"\n    />\n  </Teleport>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { MenuInfo } from 'ant-design-vue/es/menu/src/interface';\nimport type { RouteKey } from '@elegant-router/types';\nimport { GLOBAL_HEADER_MENU_ID, GLOBAL_SIDER_MENU_ID } from '@/constants/app';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { useRouterPush } from '@/hooks/common/router';\nimport FirstLevelMenu from '../components/first-level-menu.vue';\nimport { useMenu, useMixMenuContext } from '../../../context';\n\ndefineOptions({\n  name: 'HorizontalMixMenu'\n});\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\nconst { routerPushByKeyWithMetaQuery } = useRouterPush();\nconst { allMenus, childLevelMenus, activeFirstLevelMenuKey, setActiveFirstLevelMenuKey } = useMixMenuContext();\nconst { selectedKey } = useMenu();\n\nconst inverted = computed(() => !themeStore.darkMode && themeStore.sider.inverted);\n\nfunction handleClickMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  routerPushByKeyWithMetaQuery(key);\n}\n\nfunction handleSelectMixMenu(menu: App.Global.Menu) {\n  setActiveFirstLevelMenuKey(menu.key);\n\n  if (!menu.children?.length) {\n    routerPushByKeyWithMetaQuery(menu.routeKey);\n  }\n}\n</script>\n\n<template>\n  <Teleport :to=\"`#${GLOBAL_HEADER_MENU_ID}`\">\n    <AMenu\n      mode=\"horizontal\"\n      :selected-keys=\"[selectedKey]\"\n      :items=\"childLevelMenus\"\n      class=\"horizontal-menu size-full transition-300 border-0!\"\n      :class=\"{ 'bg-container!': themeStore.darkMode }\"\n      :style=\"{ lineHeight: themeStore.header.height + 'px' }\"\n      @click=\"handleClickMenu\"\n    />\n  </Teleport>\n  <Teleport :to=\"`#${GLOBAL_SIDER_MENU_ID}`\">\n    <FirstLevelMenu\n      :menus=\"allMenus\"\n      :active-menu-key=\"activeFirstLevelMenuKey\"\n      :inverted=\"inverted\"\n      :sider-collapse=\"appStore.siderCollapse\"\n      :dark-mode=\"themeStore.darkMode\"\n      :theme-color=\"themeStore.themeColor\"\n      @select=\"handleSelectMixMenu\"\n      @toggle-sider-collapse=\"appStore.toggleSiderCollapse\"\n    />\n  </Teleport>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { MenuInfo } from 'ant-design-vue/es/menu/src/interface';\nimport type { RouteKey } from '@elegant-router/types';\nimport { SimpleScrollbar } from '@sa/materials';\nimport { GLOBAL_HEADER_MENU_ID, GLOBAL_SIDER_MENU_ID } from '@/constants/app';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport { useRouteStore } from '@/store/modules/route';\nimport { useRouterPush } from '@/hooks/common/router';\nimport { useMenu, useMixMenuContext } from '../../../context';\n\ndefineOptions({\n  name: 'ReversedHorizontalMixMenu'\n});\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\nconst routeStore = useRouteStore();\nconst { routerPushByKeyWithMetaQuery } = useRouterPush();\nconst {\n  firstLevelMenus,\n  childLevelMenus,\n  activeFirstLevelMenuKey,\n  setActiveFirstLevelMenuKey,\n  isActiveFirstLevelMenuHasChildren\n} = useMixMenuContext();\nconst { selectedKey } = useMenu();\n\nfunction handleSelectMixMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  setActiveFirstLevelMenuKey(key);\n\n  if (!isActiveFirstLevelMenuHasChildren.value) {\n    routerPushByKeyWithMetaQuery(key);\n  }\n}\n\nconst openKeys = computed(() => {\n  if (appStore.siderCollapse || !selectedKey.value) return [];\n\n  if (!selectedKey.value) return [];\n\n  return routeStore.getSelectedMenuKeyPath(selectedKey.value);\n});\n\nfunction handleClickMenu(menuInfo: MenuInfo) {\n  const key = menuInfo.key as RouteKey;\n\n  routerPushByKeyWithMetaQuery(key);\n}\n</script>\n\n<template>\n  <Teleport :to=\"`#${GLOBAL_HEADER_MENU_ID}`\">\n    <AMenu\n      mode=\"horizontal\"\n      :selected-keys=\"[activeFirstLevelMenuKey]\"\n      :items=\"firstLevelMenus\"\n      class=\"horizontal-menu size-full transition-300 border-0!\"\n      :class=\"{ 'bg-container!': themeStore.darkMode }\"\n      :style=\"{ lineHeight: themeStore.header.height + 'px' }\"\n      @click=\"handleSelectMixMenu\"\n    />\n  </Teleport>\n  <Teleport :to=\"`#${GLOBAL_SIDER_MENU_ID}`\">\n    <SimpleScrollbar>\n      <AMenu\n        mode=\"inline\"\n        :items=\"childLevelMenus\"\n        :selected-keys=\"[selectedKey]\"\n        :open-keys=\"openKeys\"\n        :inline-collapsed=\"appStore.siderCollapse\"\n        :inline-indent=\"18\"\n        class=\"size-full transition-300 border-0!\"\n        :class=\"{ 'bg-container!': themeStore.darkMode }\"\n        @click=\"handleClickMenu\"\n      />\n    </SimpleScrollbar>\n  </Teleport>\n</template>\n\n<style scoped></style>\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { Component } from 'vue';\nimport { transformColorWithOpacity } from '@sa/utils';\nimport { useAppStore } from '@/store/modules/app';\nimport { useThemeStore } from '@/store/modules/theme';\nimport VerticalMenu from './modules/vertical-menu.vue';\nimport VerticalMixMenu from './modules/vertical-mix-menu.vue';\nimport HorizontalMenu from './modules/horizontal-menu.vue';\nimport HorizontalMixMenu from './modules/horizontal-mix-menu.vue';\nimport ReversedHorizontalMixMenu from './modules/reversed-horizontal-mix-menu.vue';\n\ndefineOptions({\n  name: 'GlobalMenu'\n});\n\nconst appStore = useAppStore();\nconst themeStore = useThemeStore();\n\nconst activeMenu = computed(() => {\n  const menuMap: Record<UnionKey.ThemeLayoutMode, Component> = {\n    vertical: VerticalMenu,\n    'vertical-mix': VerticalMixMenu,\n    horizontal: HorizontalMenu,\n    'horizontal-mix': themeStore.layout.reverseHorizontalMix ? ReversedHorizontalMixMenu : HorizontalMixMenu\n  };\n\n  return menuMap[themeStore.layout.mode];\n});\n\nconst reRenderVertical = computed(() => themeStore.layout.mode === 'vertical' && appStore.isMobile);\n\nconst selectedBgColor = computed(() => {\n  const { darkMode, themeColor } = themeStore;\n\n  const light = transformColorWithOpacity(themeColor, 0.1, '#ffffff');\n  const dark = transformColorWithOpacity(themeColor, 0.3, '#000000');\n\n  return darkMode ? dark : light;\n});\n</script>\n\n<template>\n  <component :is=\"activeMenu\" :key=\"reRenderVertical\" />\n</template>\n\n<style>\n@import './index.scss';\n\n.select-menu {\n  --selected-bg-color: v-bind(selectedBgColor);\n}\n</style>\n"],"names":["appStore","useAppStore","themeStore","useThemeStore","routeStore","useRouteStore","routerPushByKeyWithMetaQuery","useRouterPush","selectedKey","useMenu","darkTheme","computed","menuTheme","openKeys","handleClickMenu","menuInfo","key","props","__props","icon","emit","__emit","DefineMixMenuItem","MixMenuItem","createReusableTemplate","selectedBgColor","darkMode","themeColor","light","transformColorWithOpacity","dark","handleClickMixMenu","menu","toggleSiderCollapse","drawerVisible","setDrawerVisible","useBoolean","allMenus","childLevelMenus","activeFirstLevelMenuKey","setActiveFirstLevelMenuKey","getActiveFirstLevelMenuKey","useMixMenuContext","inverted","hasChildMenus","showDrawer","handleSelectMixMenu","_a","handleResetActiveMenu","firstLevelMenus","isActiveFirstLevelMenuHasChildren","activeMenu","VerticalMenu","VerticalMixMenu","HorizontalMenu","ReversedHorizontalMixMenu","HorizontalMixMenu","reRenderVertical"],"mappings":"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"}